// Code generated by MockGen. DO NOT EDIT.
// Source: ./pkg/storages/storage/object.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"
	time "time"

	gomock "github.com/golang/mock/gomock"
)

// MockObject is a mock of Object interface.
type MockObject struct {
	ctrl     *gomock.Controller
	recorder *MockObjectMockRecorder
}

// MockObjectMockRecorder is the mock recorder for MockObject.
type MockObjectMockRecorder struct {
	mock *MockObject
}

// NewMockObject creates a new mock instance.
func NewMockObject(ctrl *gomock.Controller) *MockObject {
	mock := &MockObject{ctrl: ctrl}
	mock.recorder = &MockObjectMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockObject) EXPECT() *MockObjectMockRecorder {
	return m.recorder
}

// GetAdditionalInfo mocks base method.
func (m *MockObject) GetAdditionalInfo() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAdditionalInfo")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetAdditionalInfo indicates an expected call of GetAdditionalInfo.
func (mr *MockObjectMockRecorder) GetAdditionalInfo() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAdditionalInfo", reflect.TypeOf((*MockObject)(nil).GetAdditionalInfo))
}

// GetLastModified mocks base method.
func (m *MockObject) GetLastModified() time.Time {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLastModified")
	ret0, _ := ret[0].(time.Time)
	return ret0
}

// GetLastModified indicates an expected call of GetLastModified.
func (mr *MockObjectMockRecorder) GetLastModified() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLastModified", reflect.TypeOf((*MockObject)(nil).GetLastModified))
}

// GetName mocks base method.
func (m *MockObject) GetName() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetName")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetName indicates an expected call of GetName.
func (mr *MockObjectMockRecorder) GetName() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetName", reflect.TypeOf((*MockObject)(nil).GetName))
}

// GetSize mocks base method.
func (m *MockObject) GetSize() int64 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSize")
	ret0, _ := ret[0].(int64)
	return ret0
}

// GetSize indicates an expected call of GetSize.
func (mr *MockObjectMockRecorder) GetSize() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSize", reflect.TypeOf((*MockObject)(nil).GetSize))
}
