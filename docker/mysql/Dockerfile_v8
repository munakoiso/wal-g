FROM wal-g/ubuntu:20.04

# install mysql
ENV MYSQLDATA /var/lib/mysql

RUN apt-get update && \
    apt-get install --yes \
        mysql-server \
        mysql-client \
        s3cmd \
        jq \
        lsb-release \
        bsdmainutils \
        gnupg2

# Install xtrabackup
#
# for some unknown[1] reason there is no xtrabackup for ARM... compile it [2]
# [1] https://www.percona.com/blog/percona-server-for-mysql-and-percona-xtrabackup-now-available-for-arm64/
# [2] https://www.percona.com/blog/compiling-percona-xtrabackup-for-arm/
#
# ARM upgrade instructions:
# firstly - test whether percona built it for ARM
# if not - update version =/
ARG TARGETARCH
RUN if   [ "$TARGETARCH" = "amd64" ]; then \
        wget https://repo.percona.com/apt/percona-release_latest.focal_all.deb && \
        dpkg -i percona-release_latest.focal_all.deb && \
        percona-release enable tools release && \
        apt-get update && \
        apt-get install --yes percona-xtrabackup-80 ; \
    elif [ "$TARGETARCH" = "arm64" ]; then \
        apt-get install --yes dirmngr cmake lsb-release wget build-essential flex bison automake autoconf libtool libaio-dev mysql-client libncurses-dev zlib1g-dev libev-dev libcurl4-gnutls-dev vim-common git devscripts libnuma-dev openssl libssl-dev libgcrypt20-dev libudev-dev libprocps-dev && \
        mkdir -p /compile_xtrabackup && \
        cd /compile_xtrabackup/ && \
        git clone -b release-8.0.33-28 --single-branch --depth 1 --recurse-submodules https://github.com/percona/percona-xtrabackup.git && \
        cd /compile_xtrabackup/percona-xtrabackup && \
        mkdir build && cd build && \
        mkdir /boost && \
        cmake .. -DDOWNLOAD_BOOST=1 -DWITH_BOOST=/boost -DWITH_NUMA=1 -DCMAKE_INSTALL_PREFIX=/compile_xtrabackup/percona-xtrabackup/build && \
        make -j 4 && make install ; \
    else echo "No target for $TARGETARCH" && exit 1; \
    fi;

RUN curl -s https://packagecloud.io/install/repositories/akopytov/sysbench/script.deb.sh | bash && apt -y install sysbench
RUN rm -rf $MYSQLDATA

COPY docker/mysql/client.cnf /root/.my.cnf
COPY docker/mysql/client.cnf /etc/mysql/debian.cnf
COPY docker/mysql/init.sql /etc/mysql/init.sql
COPY docker/mysql/export_common.sh /usr/local/export_common.sh
COPY docker/mysql/export_test_funcs.sh /usr/local/export_test_funcs.sh
COPY docker/common/s3cfg /root/.s3cfg

# append
COPY docker/mysql/my.cnf /tmp/my.cnf
RUN cat /tmp/my.cnf >> /etc/mysql/my.cnf; rm /tmp/my.cnf
